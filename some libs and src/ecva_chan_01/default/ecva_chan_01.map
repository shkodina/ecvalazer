Archive member included because of file (symbol)

c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_exit.o)
                              c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr4/crtm8.o (exit)
c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_clear_bss.o)
                              fftest.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

bfly_buff           0x100             fftest.o
pool                0x10              fftest.o
rx_buffer           0x80              uart_logger.o
capture             0x80              fftest.o
spektrum            0x40              fftest.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00002000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr4/crtm8.o
LOAD ecva_chan_01.o
LOAD fftest.o
LOAD ffft.o
LOAD uart_logger.o
LOAD c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a
LOAD c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr4\libc.a
LOAD c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x6fc
 *(.vectors)
 .vectors       0x00000000       0x26 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr4/crtm8.o
                0x00000000                __vector_default
                0x00000000                __vectors
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000026                . = ALIGN (0x2)
                0x00000026                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000026        0x0 linker stubs
 *(.trampolines*)
                0x00000026                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000026                __ctors_start = .
 *(.ctors)
                0x00000026                __ctors_end = .
                0x00000026                __dtors_start = .
 *(.dtors)
                0x00000026                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000026        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr4/crtm8.o
                0x00000026                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000026        0xc c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr4/crtm8.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000032       0x10 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_clear_bss.o)
                0x00000032                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000042        0x4 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr4/crtm8.o
 *(.init9)
 *(.text)
 .text          0x00000046        0x2 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr4/crtm8.o
                0x00000046                __vector_1
                0x00000046                __vector_12
                0x00000046                __bad_interrupt
                0x00000046                __vector_6
                0x00000046                __vector_3
                0x00000046                __vector_13
                0x00000046                __vector_17
                0x00000046                __vector_7
                0x00000046                __vector_5
                0x00000046                __vector_4
                0x00000046                __vector_9
                0x00000046                __vector_2
                0x00000046                __vector_15
                0x00000046                __vector_8
                0x00000046                __vector_14
                0x00000046                __vector_10
                0x00000046                __vector_16
                0x00000046                __vector_18
 .text          0x00000048        0x0 ecva_chan_01.o
 .text          0x00000048      0x116 fftest.o
                0x00000048                capture_wave
                0x00000070                main
 .text          0x0000015e      0x468 ffft.o
                0x0000015e                tbl_window
                0x0000029e                fft_input
                0x000002fc                fft_execute
                0x00000490                fft_output
                0x0000059e                fmuls_f
 .text          0x000005c6      0x132 uart_logger.o
                0x000005c6                GPIO_Configuration
                0x000005ca                USART_Configuration
                0x000005dc                loggerInit
                0x000005e2                loggerWrite
                0x000005f6                loggerWriteByteInBit
                0x00000658                loggerWriteToMarker
                0x0000066e                __vector_11
                0x000006b2                getData
 .text          0x000006f8        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_exit.o)
 .text          0x000006f8        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_clear_bss.o)
                0x000006f8                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x000006f8        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_exit.o)
 .text.libgcc   0x000006f8        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_clear_bss.o)
                0x000006f8                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x000006f8        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_exit.o)
                0x000006f8                _exit
                0x000006f8                exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x000006f8        0x4 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_exit.o)
 *(.fini0)
                0x000006fc                _etext = .

.data           0x00800060        0x0 load address 0x000006fc
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr4/crtm8.o
 .data          0x00800060        0x0 ecva_chan_01.o
 .data          0x00800060        0x0 fftest.o
 .data          0x00800060        0x0 ffft.o
 .data          0x00800060        0x0 uart_logger.o
 .data          0x00800060        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_exit.o)
 .data          0x00800060        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800060                . = ALIGN (0x2)
                0x00800060                _edata = .
                0x00800060                PROVIDE (__data_end, .)

.bss            0x00800060      0x251
                0x00800060                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800060        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr4/crtm8.o
 .bss           0x00800060        0x0 ecva_chan_01.o
 .bss           0x00800060        0x0 fftest.o
 .bss           0x00800060        0x0 ffft.o
 .bss           0x00800060        0x1 uart_logger.o
                0x00800060                rx_counter
 .bss           0x00800061        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_exit.o)
 .bss           0x00800061        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x00800061      0x1d0 fftest.o
                0x00800061                bfly_buff
                0x00800161                pool
                0x00800171                capture
                0x008001f1                spektrum
 COMMON         0x00800231       0x80 uart_logger.o
                0x00800231                rx_buffer
                0x008002b1                PROVIDE (__bss_end, .)
                0x000006fc                __data_load_start = LOADADDR (.data)
                0x000006fc                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x008002b1        0x0
                0x008002b1                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x008002b1                PROVIDE (__noinit_end, .)
                0x008002b1                _end = .
                0x008002b1                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000      0x6cc
 *(.stab)
 .stab          0x00000000      0x6cc c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr4/crtm8.o

.stabstr        0x00000000       0x85
 *(.stabstr)
 .stabstr       0x00000000       0x85 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr4/crtm8.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000       0x60
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x20 fftest.o
 .debug_aranges
                0x00000020       0x20 ffft.o
 .debug_aranges
                0x00000040       0x20 uart_logger.o

.debug_pubnames
                0x00000000      0x126
 *(.debug_pubnames)
 .debug_pubnames
                0x00000000       0x5c fftest.o
 .debug_pubnames
                0x0000005c       0xca uart_logger.o

.debug_info     0x00000000      0x547
 *(.debug_info)
 .debug_info    0x00000000        0x0 ecva_chan_01.o
 .debug_info    0x00000000      0x24d fftest.o
 .debug_info    0x0000024d       0x5d ffft.o
 .debug_info    0x000002aa      0x29d uart_logger.o
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x00000000      0x261
 *(.debug_abbrev)
 .debug_abbrev  0x00000000        0x1 ecva_chan_01.o
 .debug_abbrev  0x00000001       0xef fftest.o
 .debug_abbrev  0x000000f0       0x14 ffft.o
 .debug_abbrev  0x00000104      0x15d uart_logger.o

.debug_line     0x00000000      0x561
 *(.debug_line)
 .debug_line    0x00000000       0x24 ecva_chan_01.o
 .debug_line    0x00000024      0x1d3 fftest.o
 .debug_line    0x000001f7       0xd6 ffft.o
 .debug_line    0x000002cd      0x294 uart_logger.o

.debug_frame    0x00000000       0xc0
 *(.debug_frame)
 .debug_frame   0x00000000       0x30 fftest.o
 .debug_frame   0x00000030       0x90 uart_logger.o

.debug_str      0x00000000      0x1b3
 *(.debug_str)
 .debug_str     0x00000000       0xda fftest.o
                                0x12c (size before relaxing)
 .debug_str     0x000000da       0xd9 uart_logger.o
                                0x191 (size before relaxing)

.debug_loc      0x00000000      0x273
 *(.debug_loc)
 .debug_loc     0x00000000       0xf4 fftest.o
 .debug_loc     0x000000f4      0x17f uart_logger.o

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(ecva_chan_01.elf elf32-avr)
LOAD linker stubs

.debug_pubtypes
                0x00000000       0x76
 .debug_pubtypes
                0x00000000       0x58 fftest.o
 .debug_pubtypes
                0x00000058       0x1e uart_logger.o

.debug_ranges   0x00000000       0x18
 .debug_ranges  0x00000000       0x18 uart_logger.o
