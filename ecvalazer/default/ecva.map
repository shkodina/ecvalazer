Archive member included because of file (symbol)

c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a(_exit.o)
                              c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/crtm16.o (exit)
c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a(_copy_data.o)
                              fftest.o (__do_copy_data)
c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a(_clear_bss.o)
                              fftest.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

bfly_buff           0x200             fftest.o
pool                0x10              fftest.o
rx_buffer           0x20              uart_logger.o
capture             0x100             fftest.o
spektrum            0x80              fftest.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/crtm16.o
LOAD ecva.o
LOAD ffft.o
LOAD fftest.o
LOAD uart_logger.o
LOAD c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a
LOAD c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr5\libc.a
LOAD c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x9b0
 *(.vectors)
 .vectors       0x00000000       0x54 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/crtm16.o
                0x00000000                __vector_default
                0x00000000                __vectors
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000054                . = ALIGN (0x2)
                0x00000054                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000054        0x0 linker stubs
 *(.trampolines*)
                0x00000054                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000054                __ctors_start = .
 *(.ctors)
                0x00000054                __ctors_end = .
                0x00000054                __dtors_start = .
 *(.dtors)
                0x00000054                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000054        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/crtm16.o
                0x00000054                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000054        0xc c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/crtm16.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000060       0x16 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a(_copy_data.o)
                0x00000060                __do_copy_data
 .init4         0x00000076       0x10 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a(_clear_bss.o)
                0x00000076                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000086        0x8 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/crtm16.o
 *(.init9)
 *(.text)
 .text          0x0000008e        0x4 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/crtm16.o
                0x0000008e                __vector_1
                0x0000008e                __vector_12
                0x0000008e                __bad_interrupt
                0x0000008e                __vector_6
                0x0000008e                __vector_3
                0x0000008e                __vector_13
                0x0000008e                __vector_17
                0x0000008e                __vector_19
                0x0000008e                __vector_7
                0x0000008e                __vector_5
                0x0000008e                __vector_4
                0x0000008e                __vector_9
                0x0000008e                __vector_2
                0x0000008e                __vector_15
                0x0000008e                __vector_8
                0x0000008e                __vector_14
                0x0000008e                __vector_10
                0x0000008e                __vector_16
                0x0000008e                __vector_18
                0x0000008e                __vector_20
 .text          0x00000092        0x0 ecva.o
 .text          0x00000092      0x5a8 ffft.o
                0x00000092                tbl_window
                0x00000312                fft_input
                0x00000370                fft_execute
                0x00000504                fft_output
                0x00000612                fmuls_f
 .text          0x0000063a      0x202 fftest.o
                0x0000063a                capture_wave
                0x00000664                main
 .text          0x0000083c      0x170 uart_logger.o
                0x0000083c                GPIO_Configuration
                0x00000840                USART_Configuration
                0x00000852                loggerInit
                0x00000866                loggerWriteByteInBit
                0x000008d8                loggerWrite
                0x000008fa                loggerWriteToMarker
                0x00000912                __vector_11
                0x00000956                getData
 .text          0x000009ac        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a(_exit.o)
 .text          0x000009ac        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a(_copy_data.o)
 .text          0x000009ac        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a(_clear_bss.o)
                0x000009ac                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x000009ac        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a(_exit.o)
 .text.libgcc   0x000009ac        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a(_copy_data.o)
 .text.libgcc   0x000009ac        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a(_clear_bss.o)
                0x000009ac                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x000009ac        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a(_exit.o)
                0x000009ac                _exit
                0x000009ac                exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x000009ac        0x4 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a(_exit.o)
 *(.fini0)
                0x000009b0                _etext = .

.data           0x00800060       0x2e load address 0x000009b0
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/crtm16.o
 .data          0x00800060        0x0 ecva.o
 .data          0x00800060        0x0 ffft.o
 .data          0x00800060       0x2d fftest.o
 .data          0x0080008d        0x0 uart_logger.o
 .data          0x0080008d        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a(_exit.o)
 .data          0x0080008d        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a(_copy_data.o)
 .data          0x0080008d        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0080008e                . = ALIGN (0x2)
 *fill*         0x0080008d        0x1 00
                0x0080008e                _edata = .
                0x0080008e                PROVIDE (__data_end, .)

.bss            0x0080008e      0x3b1
                0x0080008e                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0080008e        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/crtm16.o
 .bss           0x0080008e        0x0 ecva.o
 .bss           0x0080008e        0x0 ffft.o
 .bss           0x0080008e        0x0 fftest.o
 .bss           0x0080008e        0x1 uart_logger.o
                0x0080008e                rx_counter
 .bss           0x0080008f        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a(_exit.o)
 .bss           0x0080008f        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a(_copy_data.o)
 .bss           0x0080008f        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x0080008f      0x390 fftest.o
                0x0080008f                bfly_buff
                0x0080028f                pool
                0x0080029f                capture
                0x0080039f                spektrum
 COMMON         0x0080041f       0x20 uart_logger.o
                0x0080041f                rx_buffer
                0x0080043f                PROVIDE (__bss_end, .)
                0x000009b0                __data_load_start = LOADADDR (.data)
                0x000009de                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0080043f        0x0
                0x0080043f                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0080043f                PROVIDE (__noinit_end, .)
                0x0080043f                _end = .
                0x0080043f                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000      0x6cc
 *(.stab)
 .stab          0x00000000      0x6cc c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/crtm16.o

.stabstr        0x00000000       0x85
 *(.stabstr)
 .stabstr       0x00000000       0x85 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/crtm16.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000       0x60
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x20 ffft.o
 .debug_aranges
                0x00000020       0x20 fftest.o
 .debug_aranges
                0x00000040       0x20 uart_logger.o

.debug_pubnames
                0x00000000      0x126
 *(.debug_pubnames)
 .debug_pubnames
                0x00000000       0x5c fftest.o
 .debug_pubnames
                0x0000005c       0xca uart_logger.o

.debug_info     0x00000000      0x669
 *(.debug_info)
 .debug_info    0x00000000        0x0 ecva.o
 .debug_info    0x00000000       0x4b ffft.o
 .debug_info    0x0000004b      0x323 fftest.o
 .debug_info    0x0000036e      0x2fb uart_logger.o
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x00000000      0x36a
 *(.debug_abbrev)
 .debug_abbrev  0x00000000        0x1 ecva.o
 .debug_abbrev  0x00000001       0x14 ffft.o
 .debug_abbrev  0x00000015      0x1b0 fftest.o
 .debug_abbrev  0x000001c5      0x1a5 uart_logger.o

.debug_line     0x00000000      0x6f7
 *(.debug_line)
 .debug_line    0x00000000       0x24 ecva.o
 .debug_line    0x00000024       0xd6 ffft.o
 .debug_line    0x000000fa      0x31d fftest.o
 .debug_line    0x00000417      0x2e0 uart_logger.o

.debug_frame    0x00000000       0xc0
 *(.debug_frame)
 .debug_frame   0x00000000       0x30 fftest.o
 .debug_frame   0x00000030       0x90 uart_logger.o

.debug_str      0x00000000      0x20f
 *(.debug_str)
 .debug_str     0x00000000      0x136 fftest.o
                                0x188 (size before relaxing)
 .debug_str     0x00000136       0xd9 uart_logger.o
                                0x17f (size before relaxing)

.debug_loc      0x00000000      0x271
 *(.debug_loc)
 .debug_loc     0x00000000      0x104 fftest.o
 .debug_loc     0x00000104      0x16d uart_logger.o

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(ecva.elf elf32-avr)
LOAD linker stubs

.debug_pubtypes
                0x00000000       0x8f
 .debug_pubtypes
                0x00000000       0x71 fftest.o
 .debug_pubtypes
                0x00000071       0x1e uart_logger.o

.debug_ranges   0x00000000       0x18
 .debug_ranges  0x00000000       0x18 uart_logger.o
